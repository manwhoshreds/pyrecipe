# completion for recipe_tool

_recipes() 
{
	python_bin=$(which python)
	case $python_bin in
		*.virtual*)
			db_file="$HOME/Code/pyrecipe/pyrecipe/backend/recipes.db"
			;;
		*)
			db_file="$HOME/.local/share/pyrecipe/recipes.db"
			;;
	esac
	sql='SELECT replace(lower(name)," ","\ ") FROM recipes'
	recipes=$(sqlite3 $db_file "$sql" 2> /dev/null || echo "no\ recipes\ found")
	echo $recipes
}

_comp_reply_for_recipes()
{
	# The next part efectively allows me to use completion 
	# words with spaces thanks to the post at:
    # https://stackoverflow.com/questions/26509260/bash-tab-completion-with-spaces
	words=$(_recipes)
    words="${words//\\ /___}"
    # split on all spaces
    for iter in $words; do
		# without this, completion breaks once a space is encountered
        # only reply with completions
        if [[ $iter =~ ^$1 ]]; then
            # swap back our escaped spaces
            COMPREPLY+=( "${iter//___/\\ }" )
        fi
    done
}

_pyrecipe()
{
	local cur prev esccur subcoms
    cur=${COMP_WORDS[COMP_CWORD]}
    prev=${COMP_WORDS[COMP_CWORD-1]}
	# without this, completion breaks once a space is encountered
    esccur="${cur//\\ /___}"
	subcmds='print add remove edit --help -h --version -V -v --verbose'
	case "$prev" in
		print|edit|remove)
			_comp_reply_for_recipes $esccur
			;;
		ocr)
			_filedir 'txt'
			;;
		recipe_tool)
			COMPREPLY=( $( compgen -W "$subcmds" -- "$cur" ) )
			;;
		*)
			_comp_reply_for_recipes $esccur
			;;
	esac
}

complete -F _pyrecipe recipe_tool
# vim: set syntax=sh:
